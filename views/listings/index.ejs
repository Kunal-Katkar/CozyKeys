<% layout("/layouts/boilerplate") %>

<style>
  #filters { 
    display: flex;
    flex-wrap: wrap;
    align-items: center;
  } 

  .filter {
    text-align: center;
    margin-right: 2rem;
    margin-top: 2rem;
    opacity: 0.8;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .filter:hover{
    opacity: 1;
    transform: scale(1.05);
  }

  .filter.active {
    opacity: 1;
    transform: scale(1.1);
    color: #fa424d;
  }

  .filter.active i {
    color: #fa424d;
  }

  .filter p {
    font-size: 0.8rem;
  }

  .tax-info {
    display: none;
  }

  .tax-toggle {
    border: 1px solid #ccc;
    border-radius: 1rem; 
    height: 3.25rem;
    padding: 1rem;
    margin-left: 2rem;
    display: flex;
    align-items: center;
  }

  .form-check-label {
    font-size: 0.8rem;
  }

  /* Search results styling */
  .search-results {
    background: linear-gradient(135deg, rgba(250, 66, 77, 0.1), rgba(255, 107, 107, 0.1));
    border-radius: 20px;
    padding: 2rem;
    margin: 2rem 0;
    border: 1px solid rgba(250, 66, 77, 0.2);
    backdrop-filter: blur(10px);
  }

  .search-results h4 {
    color: #fa424d;
    font-weight: 700;
    margin-bottom: 0.5rem;
  }

  .search-results p {
    color: #4a5568;
    font-weight: 500;
  }

  .clear-search-btn {
    background: linear-gradient(135deg, #6c757d, #495057) !important;
    border: none !important;
    border-radius: 20px !important;
    padding: 8px 20px !important;
    font-weight: 500 !important;
    color: white !important;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(108, 117, 125, 0.3);
  }

  .clear-search-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(108, 117, 125, 0.4);
    color: white !important;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    #filters {
      flex-direction: column;
      gap: 1rem;
      padding: 1.5rem;
    }
    
    .filter {
      min-width: 100px;
      padding: 0.8rem 1rem;
    }
    
    .filter i {
      font-size: 1.2rem;
    }
    
    .filter p {
      font-size: 0.8rem;
    }
  }

</style>

<body>
  <!-- The Filter Bar  -->
  <div id="filters">
    <div class="filter" data-category="trending"> 
      <div><i class="fa-solid fa-fire"></i></div>
      <p>Trending</p>
    </div>
    <div class="filter" data-category="rooms"> 
      <div><i class="fa-solid fa-bed"></i></div>
      <p>Rooms</p>
    </div>
    <div class="filter" data-category="iconic"> 
      <div><i class="fa-solid fa-mountain-city"></i></div>
      <p>Iconic City</p>
    </div>
    <div class="filter" data-category="mountains"> 
      <div><i class="fa-solid fa-mountain"></i></div>
      <p>Mountains</p>
    </div>
    <div class="filter" data-category="castles"> 
      <div><i class="fa-brands fa-fort-awesome"></i></div>
      <p>Castles</p>
    </div>
    <div class="filter" data-category="pool"> 
      <div><i class="fa-solid fa-person-swimming"></i></div>
      <p>Amazing Pool</p>
    </div>
    <div class="filter" data-category="camping"> 
      <div><i class="fa-solid fa-tents"></i></div>
      <p>Camping</p>
    </div>
    <div class="filter" data-category="farms"> 
      <div><i class="fa-solid fa-cow"></i></div>
      <p>Farms</p>
    </div>
    <div class="filter" data-category="arctic"> 
      <div><i class="fa-solid fa-snowman"></i></div>
      <p>Arctics</p>
    </div>
    <div class="filter" data-category="domes"> 
      <div><i class="fa-solid fa-igloo"></i></div>
      <p>Domes</p>
    </div>
    <div class="filter" data-category="beachfront"> 
      <div><i class="fa-solid fa-umbrella-beach"></i></div>
      <p>Beachfront</p>
    </div>
    <div class="tax-toggle">
      <div class="form-check-reverse form-switch">
        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
        <label class="form-check-label" for="flexSwitchCheckDefault">Display total after taxes</label>
      </div>
    </div>
  </div>

  <!-- Search Results Header -->
  <% if(typeof searchQuery !== 'undefined' && searchQuery) { %>
    <div class="container mt-3">
      <h4>Search Results for "<%= searchQuery %>"</h4>
      <p>Found <%= allListings.length %> listing(s)</p>
      <a href="/listings" class="btn btn-outline-secondary btn-sm">Clear Search</a>
    </div>
  <% } %>

  <!-- Listings  -->
    <div class="row row-cols-lg-3 row-cols-md-3 row-cols-sm-1 mt-3">
      <% for(let listing of allListings) { %>
        <% let imageUrl = (listing.image && listing.image.url) ? listing.image.url : listing.image; %>
        <div class="col listing-card-container" data-categories="<%= getListingCategories(listing) %>">
          <a href="/listings/<%= listing._id %>" class="listing-link">
            <div class="card col listing-card">
              <img src="<%= imageUrl %>" class="card-img-top" alt="listing image" style="height: 20rem;">
              <div class="card-img-overlay"></div>
              <div class="card-body">
                <p class="card-text"> <b><%= listing.title %></b> <br> 
                  &#8377; <%= listing.price.toLocaleString("en-IN") %> / night
                  <i class="tax-info">&nbsp; &nbsp; +18% GST</i>
                </p>
              </div>
            </div>
          </a>
        </div>
      <% } %>
    </div>
</body>


<script> 
// For Toggle tax info
  let taxSwitch = document.getElementById("flexSwitchCheckDefault");
  taxSwitch.addEventListener("click", () => {
    let taxInfo = document.getElementsByClassName("tax-info");
    for(let info of taxInfo) {                       
      if(info.style.display != "inline") {
        info.style.display = "inline";
      } else {
        info.style.display = "none";      
      }  
    }
  })

// For Filter functionality
document.addEventListener('DOMContentLoaded', function() {
  const filterButtons = document.querySelectorAll('.filter');
  const listingCards = document.querySelectorAll('.listing-card-container');
  let activeFilter = null;

  filterButtons.forEach(button => {
    button.addEventListener('click', function() {
      const category = this.getAttribute('data-category');
      
      // Toggle active state
      if (activeFilter === category) {
        // If clicking the same filter, show all listings
        activeFilter = null;
        filterButtons.forEach(btn => btn.classList.remove('active'));
        listingCards.forEach(card => card.style.display = 'block');
      } else {
        // Apply new filter
        activeFilter = category;
        filterButtons.forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');
        
        listingCards.forEach(card => {
          const categories = card.getAttribute('data-categories');
          if (categories && categories.includes(category)) {
            card.style.display = 'block';
          } else {
            card.style.display = 'none';
          }
        });
      }
    });
  });
});
</script>


